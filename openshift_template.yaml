---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: hop
  annotations:
    "openshift.io/display-name": Hop
    description: |
      A simple test web service which can execute a few commands passed in the URL
    iconClass: icon-cogs

parameters:
- name: NAME
  value: hop
  description: The name of the deployment config and the service. Defaults to 'hop'.

- name: PORT_HTTP
  value: "80"
  description: The service HTTP port. Defaults to '80'.

- name: PORT_HTTPS
  value: "443"
  description: The service HTTPS port. Defaults to '443'.

- name: PORT_PROMETHEUS
  value: "8080"
  description: The prometheus endpoint HTTP port. Defaults to '8080'.

objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "${NAME}"
  spec:
    replicas: 1
    selector:
      name: "${NAME}"
    triggers:
    - type: ConfigChange
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          name: "${NAME}"
          app: hop
      spec:
        volumes:
        - name: "${NAME}-tls"
          secret:
            secretName: "${NAME}-tls"
        containers:
        - image: smartptr/hop:latest
          imagePullPolicy: Always
          name: "${NAME}"
          command:
          - /hop
          args:
          - "--cacert"
          - /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
          - "--cert"
          - /etc/tls/private/tls.crt
          - "--key"
          - /etc/tls/private/tls.key
          - "--interface"
          - 0.0.0.0
          - "--port-http"
          - "8000"
          - "--port-https"
          - "8443"
          - "--port-metrics"
          - "8080"
          - "--verbose"
          volumeMounts:
          - name: "${NAME}-tls"
            mountPath: "/etc/tls/private"
            readOnly: true
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/scheme: http
      prometheus.io/port: "${PORT_PROMETHEUS}"
      service.alpha.openshift.io/serving-cert-secret-name: "${NAME}-tls"
    labels:
      app: hop
      name: "${NAME}"
    name: "${NAME}"
  spec:
    ports:
    - port: ${{PORT_HTTP}}
      name: http
      protocol: TCP
      targetPort: 8000
    - port: ${{PORT_HTTPS}}
      name: https
      protocol: TCP
      targetPort: 8443
    - port: ${{PORT_PROMETHEUS}}
      name: prometheus
      protocol: TCP
      targetPort: 8080
    selector:
      name: "${NAME}"
    sessionAffinity: None
    type: ClusterIP

